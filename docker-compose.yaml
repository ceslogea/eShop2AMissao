version: "3.1"

networks:
  kafka-net:
    driver: bridge

services:
  start-dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - rabbitmq
      - kafka-server1
    command: rabbitmq:5672

  gateway:
    image: eshopgateway:latest
    build:
      context: .
      dockerfile: ./gateway/eShop.Gateway/Dockerfile
    restart: on-failure
    ports:
      - "5000:80"
      - "5001:443"
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      rabbitmq__Hostnames__0: rabbitmq
      catalogurl: https://api-catalog:5005
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_HTTPS_PORT: 5001
      ASPNETCORE_Kestrel__Certificates__Default__Password:  696a72d0-20fb-4e03-ba00-597acb8ef4b2
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
      - ${HOME}/.aspnet/https:/root/.aspnet/https/

  api-catalog:
    # image: eshopcatalog:latest
    build:
      context: .
      dockerfile: ./api/catalog/eShop.Catalog/Dockerfile
    restart: on-failure
    links:
      - mongo-catalog
      - rabbitmq
      - kafka-server1
    depends_on:
      - mongo-catalog
      - rabbitmq
      - kafka-server1
    ports:
      - "5004:80"
      - "5005:443"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      rabbitmq__Hostnames__0: rabbitmq
      producer__bootstrapservers: kafka-server1:9092
      consumer__bootstrapservers: kafka-server1:9092
      mongo__connectionString: mongodb://mongo-catalog:27017,
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_HTTPS_PORT: 5005
      ASPNETCORE_Kestrel__Certificates__Default__Password:  696a72d0-20fb-4e03-ba00-597acb8ef4b2
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
      # - ${HOME}/.aspnet/https:/root/.aspnet/https/

  mongo-catalog:
    image: mongo
    environment:
      - AUTH=no
    ports:
      - "27017:27017"
    # volumes:
    #   - ./data/db:/data/db

  # api-basket:
  #   build:
  #     context: .
  #     dockerfile: ./api/basket/eShop.Basket/Dockerfile
  #   links:
  #     - mongo-basket
  #     - rabbitmq
  #     - kafka-server1
  #   depends_on:
  #     - mongo-basket
  #     - rabbitmq
  #     - kafka-server1
  #   ports:
  #     - "5005:5005"
  #   environment:
  #     ASPNETCORE_URLS: http://+:5005
  #     rabbitmq__Hostnames__0: rabbitmq
  #     producer__bootstrapservers: kafka-server1:9092
  #     consumer__bootstrapservers: kafka-server1:9092
  #     mongo__connectionString: mongodb://mongo-basket:27017,

  # mongo-basket:
  #   image: mongo
  #   environment:
  #     - AUTH="no"
  #   ports:
  #     - "27018:27018"
  #   volumes:
  #     - ./data/db:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "8080:15672"

  zookeeper-server:
    image: "bitnami/zookeeper:latest"
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-server1:
    image: "bitnami/kafka:latest"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
